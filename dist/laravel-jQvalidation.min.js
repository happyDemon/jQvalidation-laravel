/*!
 * jQvalidation-laravel.js
 * Version 0.1.0 - built Sun, Jun 26th 2016, 9:48 am
 * https://github.com/happyDemon/jQvalidation-laravel
 * Maxim Kerstens - <maxim.kerstens@gmail.com>
 * MIT Licensed
 */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r(require("jquery"),require("moment")):"function"==typeof define&&define.amd?define(["jquery","moment"],r):e.LjQv=r(e.jQuery,e.moment)}(this,function(e,r){"use strict";e.validator.addMethod("in",function(e,r,t){var n=t.split(",");return n.indexOf(e)>-1},"The provided value is not present in the list."),e.validator.addMethod("notIn",function(e,r,t){var n=t.split(",");return n.indexOf(e)==-1},"The provided value is not present in the list."),e.validator.setDefaults({dateFormats:["DD/MM/YY","DD/MM/YYYY","MM/DD/YY","MM/DD/YYYY","YY/MM/DD","YYYY/MM/DD"]}),e.validator.addMethod("date",function(e,n,i){return r(e,t.getDateFormatsOption(this),!0).isValid()},"You should provide a valid date."),e.validator.addMethod("dateFormat",function(e,n,i){return r(e,t.convert(i),!0).isValid()},"The date you entered is not in the right format (%s)."),e.validator.addMethod("before",function(e,n,i){var a=t.getDateFormatsOption(this),o=r(i,a,!0);return o!==!1&&r(e,a)<o},"The date you entered should be before %s."),e.validator.addMethod("beforeInput",function(n,i,a){var o=t.getDateFormatsOption(this),d=e(a);if(0==d.length)return!0;var s=d.val();if(""==s)return!0;var u=r(s,o,!0);if(u.isValid()===!1)return console.warn(a+" input does not contain a valid date"),!1;var l=r(n,o,!0);return l.isValid()===!1?(console.warn("the input being checked does not contain a valid date"),!1):l<u},"The date you entered should be before %s."),e.validator.addMethod("after",function(e,n,i){var a=t.getDateFormatsOption(this),o=r(i,a,!0);return o!==!1&&r(e,a)>o},"The date you entered should be after %s."),e.validator.addMethod("afterInput",function(n,i,a){var o=t.getDateFormatsOption(this),d=e(a);if(console.log(this,o),0==d.length)return!0;var s=d.val();if(""==s)return!0;var u=r(s,o,!0);if(u.isValid()===!1)return console.warn(a+" input does not contain a valid date"),!1;var l=r(n,o,!0);return l.isValid()===!1?(console.warn("the input being checked does not contain a valid date"),!1):l>u},"The date you entered should be after %s.");var t=window.formatDatePhpToJs={mapChars:{d:"DD",D:"ddd",j:"D",l:"dddd",N:"E",S:function(){return"["+this.format("Do",!0).replace(/\d*/g,"")+"]"},w:"d",z:function(){return this.format("DDD",!0)-1},W:"W",F:"MMMM",m:"MM",M:"MMM",n:"M",t:function(){return this.daysInMonth()},L:function(){return this.isLeapYear()?1:0},o:"GGGG",Y:"YYYY",y:"YY",a:"a",A:"A",B:function(){var e=this.clone().utc(),r=(e.hours()+1)%24+e.minutes()/60+e.seconds()/3600;return Math.floor(1e3*r/24)},g:"h",G:"H",h:"hh",H:"HH",i:"mm",s:"ss",u:"[u]",e:"[e]",I:function(){return this.isDST()?1:0},O:"ZZ",P:"Z",T:"[T]",Z:function(){return 36*parseInt(this.format("ZZ",!0),10)},c:"YYYY-MM-DD[T]HH:mm:ssZ",r:"ddd, DD MMM YYYY HH:mm:ss ZZ",U:"X"},formatEx:/[dDjlNSwzWFmMntLoYyaABgGhHisueIOPTZcrU]/g,convert:function(e){return e.replace(this.formatEx,function(e){return"function"==typeof t.mapChars[e]?t.mapChars[e].call(r()):t.mapChars[e]})},getDateFormatsOption:function(e){return e.settings.dateFormats}},n={parseArrayStringParameter:function(e){var r=e.match(/^\s*\[(.*)\]\s*$/);if(!r)throw'Requirement is not an array: "'+e+'"';return r[1].replace(/\'+/g,"").split(",")},bindChangeToOtherElement:function(r,t,n,i){var a=e(t),o=a.data("larajqv-rules");if(void 0===o)o=[r],a.data("larajqv-rules",o);else{if(o.indexOf(r)!=-1)return;o.push(r),a.data("larajqv-rules",o)}a.on("change",function(){i===!0&&""!=e(n.$element.get(0)).val()?n.validate():i!==!0&&n.validate()})}};e.validator.addMethod("regex",function(e,r,t){return RegExp(t).test(e)},"The value is in an invalid format."),e.validator.addMethod("different",function(r,t,n){var i=e(n).val();return""==i||i!=r},"This value is not acceptable."),e.validator.addMethod("distinct",function(r,t){if("checkbox"!=e(t).attr("type"))return!0;var n=$('input[name="'+e(t).attr("name")+'"]:checked'),i=[],a=!0;return n.length>0&&n.each(function(){i.indexOf($(this).val())>-1&&(a=!1),i.push($(this).val())}),a},"A duplicate value has been selected."),window.Parsley.addValidator("requiredIf",{requirementType:"string",validateString:function(r,t,i,a){var o=e.isArray(i)?n.parseArrayStringParameter(i):i,d=o[0];if(i=o.slice(1),n.bindChangeToOtherElement("requiredIf",d,a),0==r.length){var s=e(d).val();return i.indexOf(s)==-1}return!0},messages:{en:"This field is required."}}),window.Parsley.addValidator("requiredUnless",{requirementType:"string",validateString:function(r,t,i,a){var o=e.isArray(i)?i:n.parseArrayStringParameter(i),d=o[0];if(i=o.slice(1),n.bindChangeToOtherElement("requiredUnless",d,a),0==r.length){var s=e(d).val();return i.indexOf(s)>-1}return!0},messages:{en:"This field is required."}}),window.Parsley.addValidator("requiredWith",{requirementType:"string",validateString:function(r,t,i,a){var o=e.isArray(i)?i:n.parseArrayStringParameter(i);if(0==r.length){var d=!1;return o.forEach(function(r){var t=e(r);n.bindChangeToOtherElement("requiredWith",r,a),t.length>0&&""!=t.val()&&(d=!0)}),!d}return!0},messages:{en:"This field is required."}}),window.Parsley.addValidator("requiredWithAll",{requirementType:"string",validateString:function(r,t,i,a){var o=e.isArray(i)?i:n.parseArrayStringParameter(i);if(0==r.length){var d=!0;return o.forEach(function(r){var t=e(r);n.bindChangeToOtherElement("requiredWithAll",r,a),0!=t.length&&""!=t.val()||(d=!1)}),!d}return!0},messages:{en:"This field is required."}}),window.Parsley.addValidator("requiredWithout",{requirementType:"string",validateString:function(r,t,i,a){var o=e.isArray(i)?i:n.parseArrayStringParameter(i);if(0==r.length){var d=!1;return o.forEach(function(r){var t=e(r);n.bindChangeToOtherElement("requiredWithAll",r,a),0!=t.length&&""!=t.val()||(d=!0)}),d}return!0},messages:{en:"This field is required."}}),window.Parsley.addValidator("requiredWithoutAll",{requirementType:"string",validateString:function(r,t,i,a){var o=e.isArray(i)?i:n.parseArrayStringParameter(i);if(0==r.length){var d=!0;return o.forEach(function(r){var t=e(r);n.bindChangeToOtherElement("requiredWithAll",r,a),1==t.length&&""!=t.val()&&(d=!1)}),d}return!0},messages:{en:"This field is required."}});var i={b:1,kb:1024,mb:1048576,gb:1073741824};window.Parsley.addValidator("fileSizeMax",{requirementType:["integer","string"],validateString:function(e,r,t,n){t=t.toLowerCase();var a=n.$element[0].files;if(r*=i[t.toLowerCase()],console.log(r),a.length>0)for(var o=0;o<a.length;o++)if(console.log(a[o].size),a[o].size>r)return!1;return!0},messages:{en:"Your file(s) are too big."}}),window.Parsley.addValidator("fileSizeMin",{requirementType:["integer","string"],validateString:function(e,r,t,n){var a=n.$element[0].files;if(r*=i[t.toLowerCase()],a.length>0)for(var o=0;o<a.length;o++)if(a[o].size<r)return!1;return!0},messages:{en:"Your file(s) should are too small."}}),window.Parsley.addValidator("fileSizeBetween",{requirementType:["integer","integer","string"],validateString:function(e,r,t,n,a){var o=a.$element[0].files;if(r*=i[n.toLowerCase()],t*=i[n.toLowerCase()],o.length>0)for(var d=0;d<o.length;d++)if(o[d].size<=r||o[d].size>=t)return!1;return!0},messages:{en:"Your file(s) should be between %s and %s %s."}}),window.Parsley.addValidator("image",{validateString:function(e,r,t){var n=t.$element[0].files;if(n.length>0)for(var i=0;i<n.length;i++)if(!n[i].type.match("image/*"))return!1;return!0},messages:{en:"This is not an image."}}),window.Parsley.addValidator("fileMimetype",{requirementType:"string",validateString:function(e,r,t){var i=n.parseArrayStringParameter(r),a=t.$element[0].files;if(a.length>0)for(var o=0;o<a.length;o++)if(i.indexOf(a[o].type)==-1)return!1;return!0},messages:{en:'This file does not have the correct mimetype "%s".'}}),window.Parsley.addValidator("fileExt",{requirementType:"string",validateString:function(e,r,t){var i=n.parseArrayStringParameter(r),a=t.$element[0].files;if(a.length>0)for(var o=0;o<a.length;o++){var d=a[o].name.split(".");if(i.indexOf(d[d.length-1])==-1)return!1}return!0},messages:{en:"This file does not have the correct extensions."}}),window.Parsley.addValidator("dimensions",{requirementType:{"":"boolean",min_width:"number",max_width:"number",min_height:"number",max_height:"number",width:"number",height:"number",ratio:"string"},validateString:function(r,t,n){var i=n.$element[0].files,a=n.domOptions.dimensionsOptions;if(i.length>0){var o=e.Deferred(),d=window.URL||window.webkitURL,s=new Image;return s.onload=function(){var e=this.width,r=this.height;if("undefined"!=typeof a.min_width&&e<a.min_width)return o.reject(s),!0;if("undefined"!=typeof a.max_width&&e>a.max_width)return o.reject(s),!0;if("undefined"!=typeof a.min_height&&r<a.min_height)return o.reject(s),!0;if("undefined"!=typeof a.max_height&&r>a.max_height)return o.reject(s),!0;if("undefined"!=typeof a.width&&e!=a.width)return o.reject(s),!0;if("undefined"!=typeof a.height&&r!=a.height)return o.reject(s),!0;if("undefined"!=typeof a.ratio){var t=a.ratio.split(":");if(t[0]/t[1]!=e/r)return o.reject(s),!0}o.resolve(s)},s.onerror=function(){console.warn("image load error"),o.reject()},s.src=d.createObjectURL(i[0]),o.promise().then(function(e){return e=null,!0},function(e){return e=null,!1})}return!0}}),window.ParsleyExtend=e.extend({},window.ParsleyExtend,{_isRequired:function(){var e=["required","requiredIf","requiredUnless","requiredWith","requiredWithAll","requiredWithout","requiredWithoutAll"],r=[];return e.forEach(function(e){"undefined"!=typeof this.constraintsByName[e]&&r.push(e)},this),0!=r.length&&(!(r.indexOf("required")>=0)||!1!==this.constraintsByName.required.requirements)}});var a=n;return a});
//# sourceMappingURL=laravel-jQvalidation.min.js.map
